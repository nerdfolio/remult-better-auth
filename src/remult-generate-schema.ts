import { writeFile } from "node:fs/promises"
import { type BetterAuthOptions, logger } from "better-auth"
import { Remult } from "remult"
import { remultAdapter } from "./remult-ba"

export async function generateRemultSchema({ options, file }: { options: BetterAuthOptions; file: string }) {
	const adapter = remultAdapter(new Remult(), {
		// for schema generation, we don't need to declare entities.
		authEntities: {},
	})(options)

	if (!adapter.createSchema) {
		throw new Error(`Adapter "${adapter.id}" does not support createSchema`)
	}

	const { code, path, overwrite } = await adapter.createSchema(options, file)

	const genTimestamp = (() => {
		const ts = new Date()
		return `${ts.toISOString()} | ${ts.toLocaleString("en-US", { timeZone: "America/Los_Angeles", timeZoneName: "short" })}`
	})()

	const pre = ["//".repeat(10), `// GENERATED by remult-better-auth. ${genTimestamp}`, "//".repeat(10)].join("\n")
	const authEntities = `export const authEntities = { User, Session, Account, Verification }`
	const post = ["", authEntities, "//".repeat(10), `// END GENERATED by remult-better-auth. ${genTimestamp}`, "//".repeat(10)].join(
		"\n"
	)

	logger.info("Writing remult entities to:", path)
	const content = [overwrite ? pre : `\n${pre}`, code, post].join("\n")
	await writeFile(path, content, { encoding: "utf-8", flag: overwrite ? "w+" : "a" })
	return path
}
